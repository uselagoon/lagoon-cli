// Code generated by go-bindata. DO NOT EDIT.
// sources:
// _lgraphql/addAdvancedTaskDefinition.graphql (1.26kB)
// _lgraphql/addBillingGroup.graphql (237B)
// _lgraphql/addEnvVariable.graphql (292B)
// _lgraphql/addGroup.graphql (110B)
// _lgraphql/addGroupsToProject.graphql (184B)
// _lgraphql/addNotificationEmail.graphql (183B)
// _lgraphql/addNotificationMicrosoftTeams.graphql (177B)
// _lgraphql/addNotificationRocketChat.graphql (219B)
// _lgraphql/addNotificationSlack.graphql (214B)
// _lgraphql/addNotificationToProject.graphql (289B)
// _lgraphql/addOrUpdateEnvironment.graphql (566B)
// _lgraphql/addProject.graphql (1.123kB)
// _lgraphql/addProjectToBillingGroup.graphql (185B)
// _lgraphql/addSshKey.graphql (279B)
// _lgraphql/addUser.graphql (254B)
// _lgraphql/addUserToGroup.graphql (243B)
// _lgraphql/addWorkflow.graphql (470B)
// _lgraphql/advancedTasksForEnvironment.graphql (760B)
// _lgraphql/deployEnvironmentBranch.graphql (227B)
// _lgraphql/deployEnvironmentLatest.graphql (128B)
// _lgraphql/deployEnvironmentPromote.graphql (372B)
// _lgraphql/deployEnvironmentPullrequest.graphql (454B)
// _lgraphql/environmentByName.graphql (249B)
// _lgraphql/getTaskDefinitionByID.graphql (473B)
// _lgraphql/lagoonSchema.graphql (126B)
// _lgraphql/lagoonVersion.graphql (25B)
// _lgraphql/me.graphql (232B)
// _lgraphql/minimalProjectByName.graphql (505B)
// _lgraphql/projectByName.graphql (2.062kB)
// _lgraphql/projectByNameMetadata.graphql (121B)
// _lgraphql/projectsByMetadata.graphql (597B)
// _lgraphql/removeProjectMetadataByKey.graphql (254B)
// _lgraphql/switchActiveStandby.graphql (198B)
// _lgraphql/taskByID.graphql (216B)
// _lgraphql/updateAdvancedTaskDefinition.graphql (793B)
// _lgraphql/updateProjectMetadata.graphql (337B)
// _lgraphql/updateWorkflow.graphql (439B)
// _lgraphql/workflowsForEnvironment.graphql (380B)

package lgraphql

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __lgraphqlAddadvancedtaskdefinitionGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x92\xbd\x6a\x2b\x31\x10\x85\xfb\x7d\x8a\x29\x6e\x61\x83\xf1\x03\x6c\x67\x6e\x1a\x37\x21\x10\x77\x21\x85\x58\x4d\x16\x25\xe8\x07\x49\x6b\x30\x61\xdf\x3d\x48\xab\x99\x95\x8c\x83\x93\x2e\x8d\xf1\x9c\x39\xb2\xe7\x7c\x33\x7a\x8a\x22\x2a\x6b\x60\xd3\x01\xfc\x33\x42\x63\x0f\xcf\xd1\x2b\x33\xee\x92\x20\x31\x0c\x5e\xb9\xe4\x68\x74\xa5\xc5\xd8\x3a\xe3\xc5\x61\x0f\x07\x79\x16\x66\x40\x79\x12\xe1\xe3\x01\xdf\x94\x51\xe9\xe9\xe9\xe2\x30\x64\x57\x40\x7f\x56\x43\xfb\x72\xb0\x5a\x0b\x23\x1b\x0d\xcd\x59\x79\x6b\x34\x9a\xd8\xc3\xd1\xc4\x2c\x3a\x6f\xdf\x71\xa8\x84\xd1\xdb\xc9\x3d\x5e\xcf\xec\xd0\x6b\x15\x42\x1e\x39\xcd\xf1\xc4\x75\x6e\x8b\x9b\x23\x1e\xfc\x38\xa5\x7f\x0b\x3d\xbc\xdc\x0e\x41\x8e\xa3\x71\x53\x7c\xed\xb6\xf0\xd9\x01\x00\x08\x29\x6f\xfb\x37\x2a\x19\xfb\x62\x03\x58\xd8\x66\xc4\xbb\x22\x35\x74\x6b\xd6\x64\x28\x98\x17\xdc\x24\x2e\xa4\x33\x70\x92\x18\x2b\x01\xa6\x06\xb3\x25\xca\xd4\x68\x00\xd7\xb8\xc9\xc0\xb0\x09\x3b\x35\x2a\xe8\xeb\x02\xf8\x55\xc5\xbe\x5a\x04\xb5\xef\xb2\xbf\xb7\x9d\xfc\x3b\xf3\x96\xa1\xee\xf7\x7b\xb0\xe6\x9b\xb3\xfb\xbf\x44\x66\x33\x80\x92\xfc\x35\xed\x81\x8b\xc4\x92\x8b\x42\x6a\xad\x3d\x8a\x88\x6b\x5d\x10\x73\x5d\xf8\x70\xcd\x50\x56\x07\x83\x60\xa9\x22\xce\x5a\x75\x00\x45\x9b\x7f\x12\xf3\x98\x8e\xe3\xb7\x21\xf3\x45\xfd\x85\x88\x77\x8f\xa2\x4a\xd6\x64\xbb\x4a\x77\x95\x6f\x6e\x08\xa6\xcf\xb9\xfb\x0a\x00\x00\xff\xff\x2a\x01\x6c\x99\xec\x04\x00\x00")

func _lgraphqlAddadvancedtaskdefinitionGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddadvancedtaskdefinitionGraphql,
		"_lgraphql/addAdvancedTaskDefinition.graphql",
	)
}

func _lgraphqlAddadvancedtaskdefinitionGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddadvancedtaskdefinitionGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addAdvancedTaskDefinition.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcd, 0xcf, 0x8, 0x24, 0x4a, 0xae, 0x38, 0xb, 0x68, 0xbd, 0xc7, 0xb3, 0x9d, 0x73, 0x69, 0x22, 0x54, 0x39, 0xbf, 0xd0, 0x11, 0xf4, 0xd6, 0xb1, 0x83, 0x7b, 0x91, 0xc4, 0xa7, 0x4, 0x2, 0xa6}}
	return a, nil
}

var __lgraphqlAddbillinggroupGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\xc9\x4b\xcc\x4d\xb5\x52\x08\x2e\x29\xca\xcc\x4b\x57\xd4\x01\x89\x24\x97\x16\x15\xa5\xe6\x25\x57\x5a\x29\x38\x43\x59\x10\xf1\xa4\xcc\x9c\x9c\xcc\xbc\xf4\xe0\xfc\xb4\x92\xf2\xc4\x22\xb8\x26\x4d\x85\x6a\x2e\x05\x05\x05\x85\xc4\x94\x14\x27\x88\x0a\xf7\xa2\xfc\xd2\x02\x8d\xcc\xbc\x82\xd2\x12\x2b\xa8\xa4\x82\x02\xc4\x1e\xb0\x75\x3a\x50\x21\x84\x45\x70\x3b\x61\x52\x18\x76\xa1\xdb\x0e\x56\x57\xab\x09\x37\x3e\x33\x05\xc9\x1e\x88\x24\x17\x08\x03\x02\x00\x00\xff\xff\x90\xae\x83\xc3\xed\x00\x00\x00")

func _lgraphqlAddbillinggroupGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddbillinggroupGraphql,
		"_lgraphql/addBillingGroup.graphql",
	)
}

func _lgraphqlAddbillinggroupGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddbillinggroupGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addBillingGroup.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb, 0xe9, 0xf5, 0xc1, 0xd1, 0xa5, 0xa6, 0x4, 0x10, 0xc5, 0x8, 0xdc, 0x2f, 0xd7, 0xdd, 0xd, 0x72, 0xbb, 0xc1, 0xac, 0x96, 0xf5, 0x21, 0xd5, 0xa1, 0xc2, 0x22, 0x78, 0x2d, 0x7a, 0x75, 0x98}}
	return a, nil
}

var __lgraphqlAddenvvariableGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xb1\xca\xc3\x20\x14\x46\xf7\x3c\xc5\xf7\xc3\x3f\x24\x90\x27\x70\xef\x90\x39\xa5\xfb\x6d\x95\x22\x24\x37\x21\xbd\x06\x42\xe9\xbb\x17\xbd\xda\x4a\x07\x97\x73\xd4\xef\xcc\x41\x48\xfc\xc2\x68\x1b\xe0\x5f\x8e\xd5\x19\x9c\x78\xbf\xd0\xe6\xe9\x3a\xb9\xf3\xb1\xba\xbf\xbe\xa8\xc1\x1a\x0c\x2c\x0a\x1e\xb7\xe5\xe7\xf2\x18\x89\x4a\xa6\xd9\x19\x8c\xb2\x79\xbe\x2b\xd9\x69\x0a\x5f\xd4\xe1\xd9\x00\x00\x59\x5b\x7d\xd0\x7a\x5e\x83\x98\xec\x00\xcd\x49\xd3\x7d\x85\x62\x46\xee\x29\x38\xc7\x68\x54\x81\x1a\x91\x5a\x0a\xca\x15\x5a\x93\xd8\xab\xfb\xcc\x79\x5b\x3d\x54\xd9\xc4\xf3\x0e\x00\x00\xff\xff\x1d\x4f\x13\xd7\x24\x01\x00\x00")

func _lgraphqlAddenvvariableGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddenvvariableGraphql,
		"_lgraphql/addEnvVariable.graphql",
	)
}

func _lgraphqlAddenvvariableGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddenvvariableGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addEnvVariable.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa4, 0xdf, 0xcc, 0xed, 0x24, 0x54, 0xb9, 0xf9, 0xe9, 0x47, 0xac, 0x18, 0xd2, 0xd4, 0x34, 0x44, 0x55, 0x2b, 0x61, 0x38, 0xb4, 0xbb, 0x34, 0x48, 0x3d, 0xa8, 0xaf, 0xfa, 0x11, 0x11, 0x22, 0xf3}}
	return a, nil
}

var __lgraphqlAddgroupGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\xc9\x4b\xcc\x4d\xb5\x52\x08\x2e\x29\xca\xcc\x4b\x57\xd4\x54\xa8\xe6\x52\x50\x50\x50\x48\x4c\x49\x71\x2f\xca\x2f\x2d\xd0\xc8\xcc\x2b\x28\x2d\xb1\x82\x8a\x2a\x28\x40\x14\x83\xf5\x80\x45\x6a\x35\xe1\x52\x99\x29\x48\x6a\x20\x92\x5c\x20\x0c\x08\x00\x00\xff\xff\x33\xcc\xe8\xad\x6e\x00\x00\x00")

func _lgraphqlAddgroupGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddgroupGraphql,
		"_lgraphql/addGroup.graphql",
	)
}

func _lgraphqlAddgroupGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddgroupGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addGroup.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x77, 0x26, 0xa3, 0x90, 0xe9, 0x6a, 0x92, 0x6f, 0x20, 0x1a, 0x31, 0x4b, 0x59, 0xd1, 0xd, 0x8a, 0x7a, 0x48, 0xa0, 0xa3, 0x83, 0x94, 0xf9, 0xc2, 0xae, 0x2e, 0x70, 0x6d, 0xad, 0x63, 0xf6, 0x97}}
	return a, nil
}

var __lgraphqlAddgroupstoprojectGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\x29\x28\xca\xcf\x4a\x4d\x2e\xb1\x52\x08\x80\x30\x3c\xf3\x0a\x4a\x4b\x14\x75\x40\x52\xe9\x45\xf9\xa5\x05\xc5\x56\x0a\xd1\xee\x20\x06\x44\x22\x56\x51\x53\xa1\x9a\x4b\x41\x41\x41\x21\x31\x25\x05\x2c\x5e\x1c\x92\x0f\xd5\xaa\x91\x09\x52\x62\x05\x95\x57\x50\x80\x1b\x0d\xb3\x04\x2a\x0e\x33\x17\x6a\x01\x58\xb4\x56\x13\xae\x2d\x33\x05\xca\xc8\x4b\xcc\x4d\x85\x48\x72\x81\x30\x20\x00\x00\xff\xff\x8b\x70\xd6\xd3\xb8\x00\x00\x00")

func _lgraphqlAddgroupstoprojectGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddgroupstoprojectGraphql,
		"_lgraphql/addGroupsToProject.graphql",
	)
}

func _lgraphqlAddgroupstoprojectGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddgroupstoprojectGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addGroupsToProject.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbd, 0x87, 0xa7, 0x9e, 0x69, 0x59, 0xa2, 0x82, 0x97, 0xff, 0x4b, 0x84, 0xf, 0x3e, 0x87, 0x6c, 0xb5, 0xa4, 0x4e, 0x2, 0x7f, 0x58, 0x6b, 0x69, 0x45, 0x9, 0xe2, 0x53, 0x6, 0xc9, 0xa1, 0xac}}
	return a, nil
}

var __lgraphqlAddnotificationemailGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\xc9\x4b\xcc\x4d\xb5\x52\x08\x2e\x29\xca\xcc\x4b\x57\xd4\x01\x89\xa4\xe6\x26\x66\xe6\x38\xa6\xa4\x14\xa5\x16\x17\xc3\x65\x34\x15\xaa\xb9\x14\x14\x14\x14\x12\x53\x52\xfc\xf2\x4b\x32\xd3\x32\x93\xc1\x66\xb8\x82\xd4\x6a\x64\xe6\x15\x94\x96\x58\x41\x55\x28\x28\x40\x8c\x04\x9b\xac\x03\x15\x42\x35\x13\xc5\x0a\xb0\x8a\x5a\x4d\xb8\xee\xcc\x14\x24\x63\x20\x92\x5c\x20\x0c\x08\x00\x00\xff\xff\x7d\x3b\x64\xad\xb7\x00\x00\x00")

func _lgraphqlAddnotificationemailGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddnotificationemailGraphql,
		"_lgraphql/addNotificationEmail.graphql",
	)
}

func _lgraphqlAddnotificationemailGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddnotificationemailGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addNotificationEmail.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6, 0x8d, 0xcc, 0x2d, 0x55, 0xe4, 0xe2, 0x6d, 0x59, 0x6b, 0x9a, 0xe9, 0x33, 0xad, 0x32, 0x3d, 0x2a, 0x8b, 0xe6, 0x36, 0x6d, 0x82, 0x6d, 0x57, 0x1d, 0x38, 0x7a, 0x61, 0xdd, 0x7, 0xae, 0xb5}}
	return a, nil
}

var __lgraphqlAddnotificationmicrosoftteamsGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\xc9\x4b\xcc\x4d\xb5\x52\x08\x2e\x29\xca\xcc\x4b\x57\xd4\x01\x89\x94\xa7\x26\x65\xe4\xe7\x67\xc3\x05\x35\x15\xaa\xb9\x14\x14\x14\x14\x12\x53\x52\xfc\xf2\x4b\x32\xd3\x32\x93\xc1\xda\x7d\x33\x93\x8b\xf2\x8b\xf3\xd3\x4a\x42\x52\x13\x73\x8b\x35\x32\xf3\x0a\x4a\x4b\xac\xa0\x4a\x15\x14\x20\xc6\x82\x4d\xd7\x81\x0a\xc1\xcd\x85\xd9\x00\x16\xaf\xd5\x84\xeb\xc9\x4c\x41\xd2\x0c\x91\xe4\x02\x61\x40\x00\x00\x00\xff\xff\x97\x56\x46\x93\xb1\x00\x00\x00")

func _lgraphqlAddnotificationmicrosoftteamsGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddnotificationmicrosoftteamsGraphql,
		"_lgraphql/addNotificationMicrosoftTeams.graphql",
	)
}

func _lgraphqlAddnotificationmicrosoftteamsGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddnotificationmicrosoftteamsGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addNotificationMicrosoftTeams.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x38, 0x57, 0x95, 0x3f, 0x2d, 0xec, 0x3d, 0x39, 0x8b, 0xf0, 0x86, 0x71, 0x13, 0xe9, 0x11, 0x57, 0x16, 0x27, 0x9c, 0x57, 0x8d, 0x96, 0xfc, 0xf0, 0x6, 0xce, 0xe1, 0x63, 0x5d, 0x40, 0x13, 0xfe}}
	return a, nil
}

var __lgraphqlAddnotificationrocketchatGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8d\x31\x0e\xc2\x30\x0c\x45\xf7\x9c\xe2\x23\x31\xb4\x52\x4f\xd0\x95\x9d\x01\x4e\x60\x92\x40\xac\x52\x1b\x21\x57\x0c\x88\xbb\xa3\xa6\x49\x04\x83\x97\xf7\xad\xf7\xe6\xc5\xc8\x58\x05\x9d\x03\xf6\x42\x73\x1c\x71\xb6\x27\xcb\x6d\x37\xac\xc4\x27\x12\x89\xf7\x7f\xf8\x8a\x97\xa4\x3a\x35\xd8\xe3\xed\x00\x80\x42\x38\xaa\xf1\x95\x7d\x76\x9e\xd4\x4f\xd1\x0e\x89\xac\x63\x79\x2c\x36\x96\x37\x60\xeb\xe4\xdc\x50\x50\x0b\xd5\x64\x1d\x5a\xac\x66\x33\xff\xf4\x4d\xc6\xe1\xc7\xba\x8d\x6e\xbd\x6f\x00\x00\x00\xff\xff\x53\x0f\xa2\x30\xdb\x00\x00\x00")

func _lgraphqlAddnotificationrocketchatGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddnotificationrocketchatGraphql,
		"_lgraphql/addNotificationRocketChat.graphql",
	)
}

func _lgraphqlAddnotificationrocketchatGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddnotificationrocketchatGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addNotificationRocketChat.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x78, 0x1, 0x8, 0x7d, 0xb2, 0x2c, 0x6d, 0xf8, 0xa7, 0xa4, 0xec, 0xe0, 0x6d, 0x4c, 0x2a, 0x43, 0x69, 0xbf, 0xe1, 0x6a, 0xa6, 0x3a, 0x51, 0x58, 0x2e, 0xb0, 0xf9, 0x24, 0x50, 0xc, 0xef, 0xba}}
	return a, nil
}

var __lgraphqlAddnotificationslackGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8d\x41\x0e\x82\x40\x0c\x45\xf7\x73\x8a\x6f\xe2\x02\x12\x4e\xc0\x21\xdc\x70\x82\x3a\x33\x4a\x03\xb4\xc6\x94\xb8\x30\xde\xdd\x30\x30\x8d\x2e\xba\x79\xbf\x79\x6f\x59\x8d\x8c\x55\xd0\x04\xe0\x2c\xb4\xe4\x1e\x83\x3d\x59\xee\xa7\x6e\x23\x71\x24\x91\x3c\xff\xc3\x57\xbe\x8e\xaa\x93\xc3\x16\xef\x00\x00\x94\xd2\x45\x8d\x6f\x1c\x8b\x73\x98\x29\x4e\x0d\xcb\x63\xb5\xfe\xf8\x00\xf6\x44\x29\x75\x07\xf2\x46\xad\xd5\xc1\x3b\xb5\x58\xf8\xa7\x75\x19\xa7\x1f\xeb\x3e\x86\xed\xbe\x01\x00\x00\xff\xff\xd9\x6e\xb4\xda\xd6\x00\x00\x00")

func _lgraphqlAddnotificationslackGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddnotificationslackGraphql,
		"_lgraphql/addNotificationSlack.graphql",
	)
}

func _lgraphqlAddnotificationslackGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddnotificationslackGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addNotificationSlack.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf2, 0xd4, 0x90, 0x44, 0x41, 0x48, 0x21, 0xe7, 0x30, 0x6b, 0x0, 0xed, 0x73, 0x6c, 0x1, 0xd, 0xdb, 0xb, 0x83, 0x2, 0x31, 0x7d, 0x79, 0xea, 0xce, 0x87, 0x37, 0x10, 0x4d, 0x1e, 0xfe, 0x3a}}
	return a, nil
}

var __lgraphqlAddnotificationtoprojectGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\x29\x28\xca\xcf\x4a\x4d\x2e\xb1\x52\x08\x2e\x29\xca\xcc\x4b\x57\xd4\x01\x09\xe6\xe5\x97\x64\xa6\x65\x26\x83\x95\x85\x54\x16\xa4\x5a\x29\xf8\xa1\x89\x60\xaa\xf3\x4b\xcc\x4d\x85\x9b\xa2\xa9\x50\xcd\xa5\xa0\xa0\xa0\x90\x98\x92\x82\xa2\x33\x3f\x00\x62\x9d\x46\x66\x5e\x41\x69\x89\x15\x54\x95\x82\x02\xdc\x15\x30\xf7\x40\xc5\x31\x1d\x82\xe1\x36\x2c\x2a\x21\x4e\xc1\x70\x1d\x58\x65\xad\x26\xdc\xd2\xcc\x14\x98\x5e\xb8\x24\x17\x08\x03\x02\x00\x00\xff\xff\x5d\xba\xcd\xcd\x21\x01\x00\x00")

func _lgraphqlAddnotificationtoprojectGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddnotificationtoprojectGraphql,
		"_lgraphql/addNotificationToProject.graphql",
	)
}

func _lgraphqlAddnotificationtoprojectGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddnotificationtoprojectGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addNotificationToProject.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x44, 0x34, 0x3f, 0x65, 0x51, 0xda, 0x1b, 0xe9, 0xd3, 0x3c, 0xbe, 0x8b, 0x47, 0x7, 0x43, 0xfa, 0x61, 0xba, 0x8d, 0x95, 0x2d, 0xdc, 0xda, 0x47, 0x7a, 0x1f, 0xa7, 0xa3, 0xd4, 0x27, 0xaa, 0x75}}
	return a, nil
}

var __lgraphqlAddorupdateenvironmentGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xcd\x4a\xc5\x30\x10\x85\xf7\x7d\x8a\x11\x5c\xdc\x0b\xf7\x09\xb2\x14\x0b\xba\x51\xf1\xe7\x01\x82\x99\x6a\xa4\x9d\x84\x74\x5a\x28\xe2\xbb\x4b\x9b\x26\x9d\xf4\x76\x51\x28\xe7\x9c\xcc\xcc\xf9\xba\x81\x35\x5b\x47\x70\xaa\x00\x6e\x49\x77\xa8\xe0\x8d\x83\xa5\xaf\x9b\xcb\xac\xf8\xe0\x7e\xf0\x93\x15\x3c\x12\x47\xc5\xa0\x6f\xdd\xf4\x3e\x79\x54\x70\x9f\xff\xa5\x77\xa7\x7b\x7c\xc5\xa6\x1c\x14\xad\x07\xd4\x46\x58\x72\xa0\xe5\x16\x0b\x1d\x69\xb4\xc1\x51\x87\xc4\x71\x5b\x4d\xe3\xb6\xca\x79\xa4\xfe\xdb\x36\xfc\x12\x2f\x7c\x92\xa7\x9f\xe1\xb7\x02\x00\xd0\xc6\x3c\x87\x0f\x6f\x34\x63\xbd\x4d\x3b\x59\xf2\x03\xab\x35\x03\x10\x5b\x2f\xe5\x2f\xab\x94\x6b\x27\x00\xc9\x90\xed\x05\x8a\xd2\xce\x00\x4a\x20\x65\x28\xa3\x28\xd1\xec\x16\x45\x2a\x92\x51\x0a\x5c\xe1\xd9\x03\x4b\xc1\x63\x52\x87\x00\x97\x17\x7f\xe7\x4c\xc6\x1a\x81\x28\x9a\xd5\xfc\xfd\x07\x00\x00\xff\xff\x2f\xb0\x49\x31\x36\x02\x00\x00")

func _lgraphqlAddorupdateenvironmentGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddorupdateenvironmentGraphql,
		"_lgraphql/addOrUpdateEnvironment.graphql",
	)
}

func _lgraphqlAddorupdateenvironmentGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddorupdateenvironmentGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addOrUpdateEnvironment.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9b, 0xa1, 0xe4, 0x5f, 0x61, 0x1e, 0xc1, 0xe, 0x16, 0xa5, 0xbd, 0x25, 0x26, 0x8a, 0x99, 0x77, 0x62, 0x77, 0xb1, 0x9b, 0xa, 0xe8, 0xe4, 0xd1, 0xa7, 0xb9, 0x28, 0xde, 0x9a, 0x88, 0x30, 0xec}}
	return a, nil
}

var __lgraphqlAddprojectGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x4b\x6e\x2a\x31\x10\x45\xe7\xac\xc2\x48\x6f\x00\x12\x2b\x60\xfa\x92\x01\x4a\x06\x28\x24\x0b\x30\xed\x02\x9c\xd8\xae\x8e\x5d\x6e\x09\x45\xd9\x7b\xd4\x1f\xff\xc0\xf4\xa0\x27\xf7\x56\xb5\xac\x3a\x47\x7b\xe2\x24\xd1\xb0\xd5\x82\xb1\x7f\x86\x6b\xd8\xb2\x03\x59\x69\xce\xcb\x4d\x9f\x9c\x25\x7d\x58\x55\x66\xce\x1f\x4f\xa8\x04\xd8\x10\x0f\x29\xb6\x60\xdc\x45\x9e\x68\xcb\x76\x86\x96\x65\xb6\xb7\xf8\x09\x0d\xed\x39\x11\x58\x53\xec\xf1\x86\x64\x07\x87\xab\x23\xd0\xee\x09\x5a\x85\xd7\xc7\xfd\xde\xa2\x46\x82\xc7\x03\x6f\xa0\xb1\x9b\xe9\xdf\xb9\xfb\x2a\xda\xa3\xe5\xa6\xb9\x80\x2b\xc2\xd6\x2b\x65\xe1\xdb\x83\xa3\x9b\xc2\xa2\xf0\x4d\x7f\xb0\x67\xd3\x49\x8b\x46\x83\xa1\xf2\x3a\xdc\x13\xee\x84\x82\xe1\x0c\xe3\xbd\x08\x2d\x3f\xc3\x7f\xae\x9a\x14\x0a\xe8\x40\x61\xdb\xef\x67\xbf\x72\xaf\x52\x4b\x4a\x53\xad\x95\x1d\x27\x78\x81\x78\x93\x35\xfb\x59\x30\xc6\x18\x17\x62\x3a\xea\x4a\x9a\xd6\xd3\x76\xca\x19\x1b\x21\x0e\x2c\x37\x53\x14\x28\x4e\x38\x43\x9c\x81\x4c\x50\x43\x99\xf1\x4c\x1c\xef\xca\x5b\xb0\x8f\x90\x87\xc5\x2a\xed\x9a\x03\xd5\x85\x88\xbf\x6a\x45\x75\x25\x08\x51\xd3\xa4\xba\x30\x1a\x72\x6f\x4d\x18\x4e\xc2\x44\x77\x42\x55\x6a\x53\x58\x14\x47\xea\x02\xd5\xc5\x8a\xef\x8b\x4a\x45\xbb\x22\xc2\xdc\xad\xdc\xb4\x30\x30\xef\xd9\xac\x86\xe9\xcd\x49\xc2\xcc\xc8\xa1\xfd\x5d\x47\xef\xa4\xc8\x04\x1c\xcb\x45\xff\xfd\x05\x00\x00\xff\xff\xd3\x71\xbe\x59\x63\x04\x00\x00")

func _lgraphqlAddprojectGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddprojectGraphql,
		"_lgraphql/addProject.graphql",
	)
}

func _lgraphqlAddprojectGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddprojectGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addProject.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x56, 0xf2, 0xc5, 0xea, 0x42, 0xef, 0x3a, 0x23, 0x31, 0x22, 0xb6, 0x88, 0x29, 0xdb, 0x91, 0xe3, 0x5c, 0x88, 0x89, 0xe2, 0x9e, 0x8b, 0x5e, 0xae, 0x70, 0xc3, 0x3a, 0x1d, 0x3b, 0x8e, 0xba, 0x92}}
	return a, nil
}

var __lgraphqlAddprojecttobillinggroupGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\x49\x2f\xca\x2f\x2d\xb0\x52\x70\x07\x51\x9e\x79\x05\xa5\x25\x8a\x3a\x20\xe1\x82\xa2\xfc\xac\xd4\xe4\x12\x2b\x85\x00\x08\x03\x22\xa5\xa9\x50\xcd\xa5\xa0\xa0\xa0\x90\x98\x92\x02\x15\x0f\xc9\x77\xca\xcc\xc9\xc9\xcc\x4b\x07\x1b\xa0\x91\x09\x52\x66\x05\x55\xa5\xa0\x00\x35\x1c\x62\x89\x0e\x54\x10\x6e\x34\xcc\x12\xb0\x78\xad\x26\x5c\x57\x66\x0a\x94\x91\x97\x98\x9b\x0a\x91\xe4\x02\x61\x40\x00\x00\x00\xff\xff\x98\x52\x69\x5c\xb9\x00\x00\x00")

func _lgraphqlAddprojecttobillinggroupGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddprojecttobillinggroupGraphql,
		"_lgraphql/addProjectToBillingGroup.graphql",
	)
}

func _lgraphqlAddprojecttobillinggroupGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddprojecttobillinggroupGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addProjectToBillingGroup.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd9, 0x50, 0x46, 0x42, 0xa1, 0xc1, 0xa7, 0x2b, 0x4e, 0xc8, 0x8b, 0xd, 0x56, 0x2c, 0xc2, 0xf7, 0x7a, 0x4b, 0x50, 0x3f, 0xe4, 0xa1, 0x7, 0x3a, 0x52, 0x6c, 0x9f, 0xc2, 0x85, 0x97, 0x5e, 0x98}}
	return a, nil
}

var __lgraphqlAddsshkeyGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xc1\x0a\xc2\x30\x10\x44\xef\xf9\x8a\x11\x3c\xb4\xe0\x17\xf4\xee\xc9\xa3\xe2\x7d\x21\x41\x17\x9b\x58\xda\xe4\x50\x24\xff\x2e\xe9\xa6\x59\xc1\x53\xc2\x9b\x61\xdf\xf8\x14\x29\xf2\x3b\xa0\x33\xc0\x31\x90\x77\x03\xae\x71\xe6\xf0\x38\x9c\x0a\x79\xb9\xf5\x4e\x63\xfa\xa7\xb7\x75\x2a\x70\x79\x5e\xe4\x2f\x41\x5a\xdc\x7c\xf6\xc4\x63\xeb\xf7\xf8\x18\x00\x20\x6b\xa5\xdc\x71\x98\x52\x1c\x2a\x06\xc4\xb9\xa9\x2b\x51\x67\xd3\x6b\x22\xde\x7d\x41\xe5\x45\xab\x17\x01\x27\x13\x74\x4e\x4d\xf2\xf6\xe6\xbe\x55\xd9\xfe\xac\x30\x7b\x25\x9b\x6f\x00\x00\x00\xff\xff\xbf\xff\xb7\x89\x17\x01\x00\x00")

func _lgraphqlAddsshkeyGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddsshkeyGraphql,
		"_lgraphql/addSshKey.graphql",
	)
}

func _lgraphqlAddsshkeyGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddsshkeyGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addSshKey.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x82, 0xea, 0xa0, 0xea, 0xaf, 0x19, 0xca, 0xeb, 0x1c, 0x4d, 0x51, 0x9f, 0x9a, 0xb7, 0x86, 0xc8, 0x29, 0x48, 0xa9, 0x6c, 0x3, 0x4a, 0x70, 0x77, 0xa, 0x79, 0x3, 0x16, 0x56, 0x99, 0xba, 0x29}}
	return a, nil
}

var __lgraphqlAdduserGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x31\x0e\xc2\x30\x0c\x85\xe1\x3d\xa7\x78\x48\x0c\xad\xc4\x09\x7a\x08\x16\xc4\x01\x2c\x12\x90\xa5\xda\x45\xa9\x3b\x21\xee\x8e\xda\x3a\x69\x06\x06\x2f\xff\x1b\x3e\xcb\x62\x64\x3c\x29\xba\x00\x9c\x93\x10\x8f\x03\x6e\x96\x59\x5f\xa7\xcb\x9a\x9e\x9c\x67\xbb\x92\xa4\x92\xb7\x3a\xd2\x9f\xf8\x98\x44\x92\x5a\x69\x3d\x3e\x01\x00\x28\xc6\xfb\x9c\x72\xc7\xfa\x5e\x6c\xf0\x08\xb8\xb5\x9b\xde\x1a\xec\x80\x7d\x3b\xc8\xaa\xfb\x52\xdd\xf2\xc1\xd6\xbf\x7d\xa5\x38\xb6\xe6\xbe\x86\xf5\x7e\x01\x00\x00\xff\xff\xf7\xf8\x9f\x0d\xfe\x00\x00\x00")

func _lgraphqlAdduserGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAdduserGraphql,
		"_lgraphql/addUser.graphql",
	)
}

func _lgraphqlAdduserGraphql() (*asset, error) {
	bytes, err := _lgraphqlAdduserGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addUser.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x33, 0x99, 0xcc, 0x6c, 0xa, 0x18, 0x88, 0x14, 0x92, 0xc5, 0x0, 0xbc, 0xc2, 0xb4, 0xc1, 0xa7, 0x3f, 0x87, 0xc0, 0x67, 0x13, 0xcc, 0xb7, 0xca, 0xec, 0xde, 0xdf, 0x93, 0x61, 0x6a, 0x4d, 0xe0}}
	return a, nil
}

var __lgraphqlAddusertogroupGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xbd\x0a\xc3\x30\x0c\x84\xf7\x3c\xc5\x05\x3a\x24\xd0\x27\xf0\x5e\xba\x75\xe8\xcf\x03\x18\x6c\x82\x20\xb6\x83\x62\x4f\x21\xef\x5e\xa4\xb8\xf1\xd2\x41\x20\xee\x8e\xfb\x2e\x94\x6c\x33\xa5\x88\xa1\x03\x2e\x65\xf5\x7c\x0b\x96\x66\x83\x57\x66\x8a\x53\x7f\x15\x79\xe2\x54\x96\x87\x0d\xfe\x8f\xfc\x4c\xb3\x37\xb8\xff\xde\x7e\xc4\xd6\x01\x80\x75\xee\xb3\x7a\x7e\x27\xb5\x06\x8a\x4b\xc9\xa6\x7a\x80\x80\x0c\x36\xf8\x03\xd6\xc0\xd8\x6b\x42\xcb\x25\x12\x95\xdb\x36\x9c\x09\x56\x72\x5b\xa1\xf2\x3e\x9e\x0c\x72\xf5\x91\x86\xc3\xec\xe4\xbe\x01\x00\x00\xff\xff\x00\xb0\x61\x57\xf3\x00\x00\x00")

func _lgraphqlAddusertogroupGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddusertogroupGraphql,
		"_lgraphql/addUserToGroup.graphql",
	)
}

func _lgraphqlAddusertogroupGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddusertogroupGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addUserToGroup.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x51, 0xb1, 0xe3, 0xcf, 0x2, 0xfa, 0x37, 0x3c, 0xfb, 0x73, 0x93, 0xf9, 0x16, 0xd4, 0x56, 0x41, 0x23, 0x54, 0x4e, 0x12, 0xc9, 0xda, 0xab, 0x6d, 0x85, 0x14, 0x75, 0xb9, 0xba, 0xc5, 0xd4, 0x46}}
	return a, nil
}

var __lgraphqlAddworkflowGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\xb1\x6e\x83\x30\x14\x85\xe1\xdd\x4f\x71\x86\x0e\x20\x21\x1e\x80\xad\x6a\x17\xe6\x56\xea\x7c\x85\x0d\x72\x89\xaf\x11\x31\x64\x88\xfc\xee\x11\x36\x71\x82\x14\x22\x16\x86\x9f\xab\xf3\xd9\x4c\x8e\x9c\xb6\x8c\x4c\x00\x1f\x4c\x46\x55\xf8\x71\xa3\xe6\xae\x58\x82\x9a\x15\xbb\x4d\x19\x46\xfb\xaf\x1a\x57\xa1\x66\x17\x02\xc9\x99\xb8\x51\xf2\x97\xce\xfd\xb7\x6a\x35\xeb\x65\x2f\xfc\x17\x39\xae\x02\x20\x29\xff\xec\xd8\xb7\x27\x7b\xc9\x34\x0f\x93\xab\x42\x06\x22\x17\xd4\x22\x84\x95\x8b\x6c\x4c\xc9\xbb\xcb\x31\xef\xa9\x3b\xcf\x11\x80\xcf\x57\x55\xcb\x84\x3f\xd0\x67\xeb\x0d\xb0\x4e\x00\x65\x59\xc2\x32\x3e\x5f\x5e\xd5\x86\x3a\x95\x4e\x93\xb8\x51\x01\x7f\x64\xea\xcb\x1a\x43\x2c\x0f\x8e\x2d\x5f\x2f\xbc\xb8\x05\x00\x00\xff\xff\x51\x5d\x66\xc3\xd6\x01\x00\x00")

func _lgraphqlAddworkflowGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddworkflowGraphql,
		"_lgraphql/addWorkflow.graphql",
	)
}

func _lgraphqlAddworkflowGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddworkflowGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addWorkflow.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2e, 0xcc, 0x1e, 0x29, 0x68, 0x37, 0x4c, 0x5, 0xa2, 0xe1, 0x3e, 0xf8, 0x34, 0x33, 0x30, 0x31, 0x86, 0x47, 0x34, 0xe8, 0x3c, 0x65, 0x38, 0x33, 0x74, 0xb5, 0xc, 0xbf, 0x6, 0x71, 0xb6, 0x74}}
	return a, nil
}

var __lgraphqlAdvancedtasksforenvironmentGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x4d\x4a\x07\x31\x0c\xc5\xf7\x73\x8a\x08\x2e\x74\x33\x07\x70\xf7\xc7\x0f\x98\x8d\x2b\x2f\x50\xda\x38\x44\x69\x5a\xd3\xce\xc0\x20\xbd\xbb\x14\x91\x69\xca\xa0\x6e\x26\xbb\x3c\x92\x97\xfe\x1e\xfd\x58\x50\x36\x30\x6e\x35\x6c\xd1\xbd\x98\xf4\x9e\x9e\x82\x3c\xf2\x4a\x12\xd8\x23\xe7\x9b\x6b\xdc\x9b\x3b\x98\x38\x5f\xdd\xc2\xe7\x00\x00\xbf\x6e\xa9\xa5\xd6\xe2\x67\xb9\xd6\x38\x8e\x10\x18\x2e\x8d\xcf\x03\xbe\x12\x53\xa6\xc0\xf7\xc1\x7b\xc3\xae\x19\xaf\x45\x4e\xb5\x6c\x3c\x2a\xc1\x61\xb2\x42\xb1\x1a\x28\x3d\x6f\x51\x0f\x26\x94\x95\xac\xd6\xec\xf7\x49\xa5\xcd\x12\x96\xf8\xdc\x9f\x69\x80\x94\x1e\x25\xbc\xa1\xed\x34\x14\x4f\x29\xb5\x2f\x2a\xff\x8b\x60\xf2\x66\xc6\xb3\x02\xa0\x6a\xfe\x67\x24\xa7\xe0\x43\xf7\x79\x76\xe2\x8b\xcc\x4b\x75\x4d\x1d\xf5\x01\xf9\x21\xfd\x21\x69\xe9\x72\x2f\x43\x19\xbe\x02\x00\x00\xff\xff\x51\xb6\x8b\x84\xf8\x02\x00\x00")

func _lgraphqlAdvancedtasksforenvironmentGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAdvancedtasksforenvironmentGraphql,
		"_lgraphql/advancedTasksForEnvironment.graphql",
	)
}

func _lgraphqlAdvancedtasksforenvironmentGraphql() (*asset, error) {
	bytes, err := _lgraphqlAdvancedtasksforenvironmentGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/advancedTasksForEnvironment.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x50, 0x2d, 0x7, 0x9e, 0xb7, 0x5, 0xc4, 0x1e, 0xb, 0xfa, 0xb5, 0x8f, 0x43, 0xea, 0x6a, 0xea, 0x8f, 0x1b, 0xdb, 0xeb, 0xb0, 0xab, 0x7c, 0x85, 0x3c, 0x39, 0xa0, 0x7f, 0x99, 0xd, 0x88, 0xa9}}
	return a, nil
}

var __lgraphqlDeployenvironmentbranchGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\x29\x28\xca\xcf\x4a\x4d\x2e\xb1\x52\x08\x2e\x29\xca\xcc\x4b\x57\xd4\x51\x00\x89\x26\x15\x25\xe6\x25\x67\x60\x15\x0c\x4a\x4d\x83\x89\x6b\x2a\x54\x73\x29\x28\x28\x28\xa4\xa4\x16\xe4\xe4\x57\xba\xe6\x95\x65\x16\xe5\xe7\xe5\xa6\xe6\x95\x38\x81\x55\x6a\x64\xe6\x15\x94\x96\x58\x41\x15\x29\x28\xc0\xac\x82\xf1\x15\x14\xf2\x12\x73\x53\xad\xe0\x6e\x80\x0a\xd7\x42\x69\x88\x75\x7e\x10\x25\x10\x0e\x8a\x0c\xd8\x21\x08\x47\x71\xc1\xf4\x6a\x72\xd5\x02\x02\x00\x00\xff\xff\xa9\x43\xed\xfc\xe3\x00\x00\x00")

func _lgraphqlDeployenvironmentbranchGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlDeployenvironmentbranchGraphql,
		"_lgraphql/deployEnvironmentBranch.graphql",
	)
}

func _lgraphqlDeployenvironmentbranchGraphql() (*asset, error) {
	bytes, err := _lgraphqlDeployenvironmentbranchGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/deployEnvironmentBranch.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfe, 0xa7, 0x99, 0x8e, 0x66, 0xb5, 0x0, 0x95, 0xe1, 0x11, 0x59, 0x9, 0x38, 0xcc, 0x78, 0x43, 0x35, 0xf1, 0x8d, 0x3d, 0x1a, 0xe6, 0xc0, 0xee, 0x9e, 0x43, 0xa5, 0x46, 0x33, 0x72, 0x6f, 0x51}}
	return a, nil
}

var __lgraphqlDeployenvironmentlatestGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\x49\xcd\x2b\xcb\x2c\xca\xcf\xcb\x4d\xcd\x2b\xb1\x52\x70\x45\x70\x3c\xf3\x0a\x4a\x4b\x14\x35\x15\xaa\xb9\x14\x14\x14\x14\x52\x52\x0b\x72\xf2\x2b\x91\xa4\x7d\x12\x4b\x52\x8b\x4b\x34\x32\x41\xaa\xac\xa0\x8a\x14\x14\x50\x0c\x43\x36\x1a\x2c\x5f\xcb\xa5\xa0\xa0\xc9\x55\x0b\x08\x00\x00\xff\xff\xf9\xb6\x5a\x4e\x80\x00\x00\x00")

func _lgraphqlDeployenvironmentlatestGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlDeployenvironmentlatestGraphql,
		"_lgraphql/deployEnvironmentLatest.graphql",
	)
}

func _lgraphqlDeployenvironmentlatestGraphql() (*asset, error) {
	bytes, err := _lgraphqlDeployenvironmentlatestGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/deployEnvironmentLatest.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x14, 0xc1, 0xb8, 0x2a, 0xaa, 0xda, 0x1b, 0x34, 0xf, 0x2, 0x2f, 0x91, 0xb9, 0x6b, 0x96, 0x61, 0x11, 0xf7, 0x40, 0x4a, 0x3d, 0x74, 0xb9, 0x63, 0xb5, 0xe7, 0xb3, 0x62, 0xa2, 0x59, 0x82, 0x25}}
	return a, nil
}

var __lgraphqlDeployenvironmentpromoteGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x4d\x0a\xc2\x30\x10\x46\xf7\x39\xc5\x27\xb8\x68\xc1\x13\x64\xef\x5e\xf0\x04\xa5\x1d\x24\x62\x66\x42\x3a\x11\x44\x7a\x77\xf1\x27\x51\xdb\x74\x15\xc8\x7b\x2f\xc9\xc4\x27\xed\xd4\x09\xa3\x31\xc0\x36\x44\x39\x53\xaf\x16\x47\x8d\x8e\x4f\x9b\x1d\x9e\xbb\xa3\xa4\xd8\xd3\x9e\xaf\x2e\x0a\x7b\xe2\x39\x1f\x68\x54\xc7\xaf\x63\x6a\x52\x8b\xbb\x01\x80\x81\xc2\x45\x6e\x3f\xc6\x21\x8a\x17\xa5\xc6\x71\x48\x6a\xdf\x12\xb0\xbc\x2d\x13\x80\x3b\x4f\xb6\xf2\xa0\x22\xe4\x01\xbe\x49\x89\x3e\xa8\x80\xc9\xfc\xaf\xcb\xb4\x1a\x66\x7d\x6d\xe8\x95\xdf\x30\xb9\x6d\xcd\xf4\x08\x00\x00\xff\xff\xcd\xcf\x66\xc3\x74\x01\x00\x00")

func _lgraphqlDeployenvironmentpromoteGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlDeployenvironmentpromoteGraphql,
		"_lgraphql/deployEnvironmentPromote.graphql",
	)
}

func _lgraphqlDeployenvironmentpromoteGraphql() (*asset, error) {
	bytes, err := _lgraphqlDeployenvironmentpromoteGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/deployEnvironmentPromote.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc9, 0x98, 0x28, 0x4e, 0x50, 0xf5, 0x5d, 0x81, 0x63, 0x9, 0x4c, 0xc1, 0x5e, 0x2c, 0x69, 0xbf, 0x5b, 0x32, 0xde, 0x82, 0x9a, 0x89, 0xe4, 0xef, 0xc4, 0x64, 0x4e, 0xcd, 0xf, 0xca, 0xd5, 0x87}}
	return a, nil
}

var __lgraphqlDeployenvironmentpullrequestGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x41\x4e\xc3\x30\x10\x45\xf7\x3e\xc5\xaf\xc4\xa2\x95\x7a\x02\x2f\x91\x58\x74\x83\x2a\x38\x81\x9b\x0c\xc4\xc8\x1e\x07\x67\x8c\x84\x50\xee\x8e\x12\x3b\xd0\x38\xca\xce\xfe\xff\x8d\x35\xcf\x3e\x89\x11\x1b\x18\x47\x05\x3c\xf4\x31\x7c\x50\x23\x1a\xd7\x7c\xb8\x70\x9f\xe4\x70\xc6\xd4\x71\xf2\x37\x8a\x1a\x17\x96\xc3\x79\x0a\xc4\x8a\x23\x8d\x57\x89\x96\xdf\x73\x74\x33\x03\x3d\x46\xc3\x4d\xf7\x6c\xfc\x6e\xf7\x42\x6f\xeb\xaa\x23\xd3\xee\x8d\xfd\x77\xf7\x63\x27\xfc\x28\x00\x68\xa9\x77\xe1\xfb\x89\xbf\x6c\x0c\xec\x89\xe5\x9a\x9c\x8b\xf4\x99\x68\x90\xa3\x9d\xb6\xd7\x85\x04\xfe\xe4\x16\xcd\x92\x2f\x62\xc5\xb0\xa4\xc5\x2e\x5b\x96\xac\xd6\xab\x7c\x37\xd4\xbc\xf1\x5a\xbc\x30\xb5\x71\xf5\x05\x1b\x2a\xbf\xb4\xba\xcf\xcc\xa8\x80\x93\x1a\x7f\x03\x00\x00\xff\xff\xe3\x61\x7b\xa7\xc6\x01\x00\x00")

func _lgraphqlDeployenvironmentpullrequestGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlDeployenvironmentpullrequestGraphql,
		"_lgraphql/deployEnvironmentPullrequest.graphql",
	)
}

func _lgraphqlDeployenvironmentpullrequestGraphql() (*asset, error) {
	bytes, err := _lgraphqlDeployenvironmentpullrequestGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/deployEnvironmentPullrequest.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa7, 0xd8, 0xfb, 0xe1, 0x78, 0xb5, 0xc2, 0x95, 0x7b, 0xe9, 0x9, 0x28, 0x6d, 0xd7, 0x47, 0xab, 0x61, 0xd3, 0x69, 0xfe, 0x1e, 0x5e, 0xe, 0x48, 0xde, 0x5d, 0x90, 0xe2, 0xda, 0xf9, 0x58, 0xfd}}
	return a, nil
}

var __lgraphqlEnvironmentbynameGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8d\x41\xca\x83\x30\x10\x46\xf7\x39\xc5\x27\xfc\x8b\x5f\xf0\x04\x2e\xbb\xeb\x46\x0a\xed\x05\xc4\x4c\xdb\x14\x9d\xa4\xe3\x58\x08\xc5\xbb\x17\x13\x0c\xee\x1e\x33\xbc\xf7\xbd\x17\x92\x88\x7f\x03\xfc\x71\x3f\x51\x8b\xab\x8a\xe3\x47\xd5\x6c\x97\x20\xfe\x45\x83\xb6\x38\xb3\x56\x35\xbe\x06\x20\xfe\x38\xf1\x3c\x11\xeb\x29\x76\xfd\x44\x9b\x0a\x64\x37\x25\x9a\x74\x28\xea\x1e\xa9\x0d\x52\x00\x70\xb6\x28\x09\xc4\x2f\x7a\xa0\x39\xa1\xa5\x30\xfa\x78\x8b\x21\x7f\x0e\xb3\xe5\xe6\x03\xf1\xfc\x74\x77\xbd\xe4\x85\x6e\x0f\x2e\xc1\xf6\x4a\x79\x65\x10\x2a\x6c\x69\xa4\xcc\xab\x59\x7f\x01\x00\x00\xff\xff\x2f\xae\x55\x5c\xf9\x00\x00\x00")

func _lgraphqlEnvironmentbynameGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlEnvironmentbynameGraphql,
		"_lgraphql/environmentByName.graphql",
	)
}

func _lgraphqlEnvironmentbynameGraphql() (*asset, error) {
	bytes, err := _lgraphqlEnvironmentbynameGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/environmentByName.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2c, 0xe6, 0xb7, 0xe8, 0xe4, 0xc1, 0x23, 0x31, 0x1d, 0xb1, 0x8d, 0x8e, 0x25, 0x6f, 0xcf, 0xa2, 0x5e, 0xf3, 0x54, 0x3d, 0x4d, 0x10, 0x6d, 0x77, 0x61, 0x0, 0x6f, 0xb4, 0x91, 0xf7, 0x75, 0x23}}
	return a, nil
}

var __lgraphqlGettaskdefinitionbyidGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x8f\xb1\xaa\xc3\x30\x0c\x45\xf7\x7c\x85\x1e\x64\xc8\x5b\xf2\x01\x6f\x7b\x6d\x97\x2c\x9d\xfa\x03\xc6\x52\x83\x5a\x2c\xbb\xb2\x13\x08\x25\xff\x5e\x4c\x6c\xba\x14\x0a\x1d\x3a\x18\xae\xa5\x73\xaf\xb8\xb7\x89\x74\x81\xae\x65\xfc\x83\x41\xd2\xcf\x2f\xdc\x1b\x00\x83\xb3\x11\x4b\x78\x32\xf1\x7a\xa0\x33\x0b\x27\xf6\xb2\x5b\x06\xec\x32\xd8\x32\x6e\x1c\x40\xdf\xf7\xe0\x05\xfe\x5f\x1a\x06\x67\x46\x2a\x20\x00\x63\x11\x62\x1c\x15\x89\x14\xad\x72\xc8\x70\x99\xa4\x25\xd4\x25\x67\x7b\xd1\x56\xc9\x24\xaa\x09\x91\x74\x66\x5b\x77\xa3\xfa\x29\x1c\x9f\xa1\x41\xfd\x85\x6c\x2a\x3f\x92\x99\xd5\x8b\x23\xa9\x93\x40\xea\x38\xc6\x7a\x73\x6d\xde\x37\xd9\x7b\xe7\x8c\xe0\xe7\x5d\xec\x16\xf0\x8d\x36\xf9\xad\xcd\x23\x00\x00\xff\xff\xeb\xdd\x19\xc7\xd9\x01\x00\x00")

func _lgraphqlGettaskdefinitionbyidGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlGettaskdefinitionbyidGraphql,
		"_lgraphql/getTaskDefinitionByID.graphql",
	)
}

func _lgraphqlGettaskdefinitionbyidGraphql() (*asset, error) {
	bytes, err := _lgraphqlGettaskdefinitionbyidGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/getTaskDefinitionByID.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa3, 0x15, 0x34, 0x4c, 0x14, 0x8e, 0xe6, 0x11, 0x3c, 0x54, 0x90, 0xae, 0x60, 0xd7, 0xbf, 0xfd, 0x50, 0x3c, 0x88, 0xc8, 0x2c, 0x6c, 0xf4, 0xe1, 0xa4, 0x80, 0xc2, 0xa4, 0x60, 0x24, 0xa, 0x15}}
	return a, nil
}

var __lgraphqlLagoonschemaGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x2c\x4d\x2d\xaa\x54\xa8\xe6\x52\x50\x88\x8f\x2f\x4e\xce\x48\xcd\x4d\x04\x73\x14\x14\x4a\x2a\x0b\x52\x8b\xa1\x6c\x05\x85\xec\xcc\xbc\x14\x28\x33\x2f\x31\x37\x15\xca\x4c\xcb\x4c\xcd\x49\x29\xd6\xc8\xcc\x4b\xce\x29\x4d\x49\x75\x49\x2d\x28\x4a\x4d\x4e\x2c\x49\x4d\xb1\x2a\x29\x2a\x4d\xd5\x84\x6b\x46\xd1\x53\xcb\x05\x23\x6b\xb9\x6a\x01\x01\x00\x00\xff\xff\x29\x07\x39\xef\x7e\x00\x00\x00")

func _lgraphqlLagoonschemaGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlLagoonschemaGraphql,
		"_lgraphql/lagoonSchema.graphql",
	)
}

func _lgraphqlLagoonschemaGraphql() (*asset, error) {
	bytes, err := _lgraphqlLagoonschemaGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/lagoonSchema.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9e, 0xe, 0xea, 0x54, 0xa2, 0xc2, 0x50, 0x45, 0x52, 0xa3, 0x2d, 0xb7, 0x51, 0xef, 0xb, 0x16, 0x78, 0xb0, 0xc8, 0xab, 0xf6, 0x57, 0x59, 0x73, 0xb7, 0x32, 0x67, 0x9a, 0x14, 0x52, 0x5b, 0xd5}}
	return a, nil
}

var __lgraphqlLagoonversionGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x2c\x4d\x2d\xaa\x54\xa8\xe6\x52\x50\xc8\x49\x4c\xcf\xcf\xcf\x0b\x4b\x2d\x2a\xce\xcc\xcf\xe3\xaa\x05\x04\x00\x00\xff\xff\x42\xb4\x77\x45\x19\x00\x00\x00")

func _lgraphqlLagoonversionGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlLagoonversionGraphql,
		"_lgraphql/lagoonVersion.graphql",
	)
}

func _lgraphqlLagoonversionGraphql() (*asset, error) {
	bytes, err := _lgraphqlLagoonversionGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/lagoonVersion.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdd, 0x6d, 0x26, 0x13, 0xe1, 0x87, 0x3, 0xf2, 0x97, 0xc1, 0x80, 0x76, 0xf3, 0xf, 0xa8, 0xea, 0x82, 0xb6, 0x64, 0x5c, 0xcc, 0x41, 0x3f, 0x40, 0x95, 0x3c, 0x46, 0xa5, 0x22, 0x1f, 0x8f, 0xb0}}
	return a, nil
}

var __lgraphqlMeGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x2c\x4d\x2d\xaa\x54\xa8\xe6\x52\x50\x50\x50\xc8\x4d\x85\x32\x40\x20\x33\x05\xce\x4c\xcd\x4d\xcc\xcc\x81\xf3\xd2\x32\x8b\x8a\x4b\xfc\x12\x73\x53\xe1\x22\x39\x89\x68\x02\xc5\xc5\x19\xde\xa9\x95\xc5\x48\xa6\xa1\x99\x08\x02\x79\xc8\x3a\x40\x20\x3b\xb5\x32\xa4\xb2\x00\x43\x2c\x2c\x31\xa7\x14\x43\xd0\x2d\x33\x2f\x3d\xb5\xa8\xa0\x28\x33\xaf\x04\x45\x2a\xb9\x28\x35\xb1\x24\x15\x61\x51\x2d\x17\x84\xac\x05\x04\x00\x00\xff\xff\x19\x81\x0c\x89\xe8\x00\x00\x00")

func _lgraphqlMeGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlMeGraphql,
		"_lgraphql/me.graphql",
	)
}

func _lgraphqlMeGraphql() (*asset, error) {
	bytes, err := _lgraphqlMeGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/me.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x41, 0x6a, 0x4a, 0x7d, 0x6e, 0xb1, 0xa2, 0xea, 0x22, 0xdd, 0xff, 0x81, 0x6e, 0x8d, 0x2a, 0x8a, 0x33, 0x61, 0x21, 0xdc, 0xfe, 0xcf, 0xab, 0x1, 0x5e, 0x31, 0xc8, 0x83, 0xb2, 0x8a, 0xbe, 0x9a}}
	return a, nil
}

var __lgraphqlMinimalprojectbynameGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xd1\x4e\xf3\x30\x0c\x85\xef\xfb\x14\xfe\xa5\xff\x62\xbc\x02\x97\x08\x2e\x90\x10\xaa\x18\x3c\x40\x68\x0f\x5b\x20\xb1\x33\xc7\xa9\x54\xa1\xbd\x3b\xea\xa6\xa5\x05\x75\xbd\xa9\x73\x3e\x3b\x3e\x3a\x39\x14\xe8\x48\x9b\x86\xe8\x3f\xbb\x88\x5b\xda\x9a\x7a\xde\xfd\xbb\xa1\xef\x86\x88\x28\xa9\x7c\xa2\xb3\xbb\xf1\xd9\x45\x6c\x4e\x12\xd1\xb9\xf3\x34\x70\xe9\x9b\x3e\xdf\xd7\x72\x42\xf5\xe0\x8a\xc9\x63\x1f\x66\xe1\x5d\x1d\x77\x7b\xe4\x2a\xa4\x12\x82\xe2\x50\x90\x6d\x21\xaa\xf4\xa5\x33\x2f\xfc\xc0\x83\x57\xe1\x08\xb6\xf9\xd2\xce\xfc\x80\xed\x98\x0d\x31\xdf\x23\x05\x19\xd7\xd9\xab\xcb\x5f\xeb\xe4\x05\x51\x06\xac\xb3\x56\x25\x8a\xcd\x50\x12\x38\xef\xfd\x87\xb5\xe7\x40\x5a\x67\x06\xe5\xca\x7b\x0c\x08\x92\x26\x8b\x0b\xb7\xf9\xc9\x47\x3f\x7b\xde\x79\x7b\xd3\x70\x3d\x97\xba\x64\x11\xea\xaf\x58\x8f\xb5\xc2\x62\xc9\xb5\xee\x3f\xcf\x70\x19\x9e\xfe\xc7\xe6\x27\x00\x00\xff\xff\xbb\x8c\x8a\x67\xf9\x01\x00\x00")

func _lgraphqlMinimalprojectbynameGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlMinimalprojectbynameGraphql,
		"_lgraphql/minimalProjectByName.graphql",
	)
}

func _lgraphqlMinimalprojectbynameGraphql() (*asset, error) {
	bytes, err := _lgraphqlMinimalprojectbynameGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/minimalProjectByName.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x31, 0xd3, 0x29, 0xe, 0xda, 0x7f, 0x7, 0x69, 0x5a, 0x9e, 0x60, 0x66, 0xa1, 0x4a, 0xba, 0x2b, 0x2d, 0x73, 0x64, 0xf2, 0xf4, 0xf9, 0xcb, 0xfc, 0x70, 0xd8, 0xbe, 0x9e, 0xc3, 0xff, 0xd2, 0x49}}
	return a, nil
}

var __lgraphqlProjectbynameGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x55\x4f\x6f\xdb\x3e\x0c\xbd\xf7\x53\xf0\x57\xfc\x0e\xdd\xc5\xd8\x76\xdc\x6d\xed\x8a\x6e\xe8\x96\x05\x49\x96\x6b\xc1\xc8\x74\xac\x45\x96\x1c\x8a\x76\x61\x04\xf9\xee\x83\x13\xd4\x96\xff\x24\x0d\xd0\x61\xba\x84\x79\x8f\x26\x9f\x48\x89\xda\x16\xc4\x15\xdc\x5c\x01\xfc\x6f\x31\xa3\x4f\x30\x17\xd6\x76\xfd\xdf\x3b\xd8\x5d\x01\x00\xe4\xec\x7e\x93\x92\xdb\x6a\x82\x19\xdd\x1c\x20\x80\xa3\xe7\xe1\x83\x17\xbf\x7a\xe9\xb8\x31\x6b\xaa\xf9\x83\x85\xb8\x6f\xb1\x69\x81\x15\xa3\x55\x29\xf9\x06\xc8\x0b\x63\x98\xb6\x05\x79\x09\x40\xd6\x25\x0a\x3d\x52\x15\x40\x2e\x2e\x94\x68\x67\xef\x6d\xa9\xd9\xd9\x8c\xac\xb4\x79\x94\xe8\x92\xe6\x95\x17\xca\xfc\x17\xca\x8d\xab\xc6\xb9\x05\xfa\xcd\x38\x33\xa3\xcc\x95\x34\xce\x4d\xd9\x65\x4e\x5a\xd2\x8b\x63\x5c\xd3\x1d\x1a\xd5\x60\x2e\x27\xeb\x53\x9d\xc8\xf4\x58\xb7\x29\x8a\x10\xdb\x86\x8f\xa9\x24\xe3\xf2\x5a\x76\xb0\x03\xff\x5d\x67\xba\xdd\xc7\x5a\xcb\x2f\x36\xa7\xcb\xb7\x66\x57\xe4\xbe\xad\x3b\x40\x14\x45\xe0\x2c\x3c\xd4\x04\x84\x04\xc0\xd3\x93\x54\x39\x75\xfa\x31\x68\x50\xbd\x32\xca\x56\xc4\xbe\xfb\x31\x40\xe1\x89\xfb\x18\x00\x65\xa8\xcd\x00\xf5\x3e\x7d\xa4\x6a\x10\x62\x34\xdd\x71\x6d\xa8\x5a\x54\xf9\x09\x66\x89\xa6\x18\x52\xfb\x01\x92\x68\xf6\x32\x19\x4b\x60\x70\x94\xe8\x87\x60\x67\xba\x2e\xa1\x43\x68\xef\x76\xa0\x13\xc0\x5c\x2f\x89\x1f\x98\x50\x88\x17\x29\xda\x9f\x7c\xbf\x2d\xd0\x40\x04\xd7\x1f\xa2\x8f\xd1\xfb\x6b\xd8\xef\x87\xcd\xb9\xd5\xc6\x68\xbb\x7e\x4b\x8f\x54\xc1\x4c\x56\x55\x1d\x70\x75\x8c\x3b\x77\x89\x3c\x23\xd3\x69\xe9\x64\xe3\x50\x58\x6b\x59\x27\x3a\xd1\x0a\xeb\x7b\xe5\x61\xe4\x5c\x4d\x02\x87\xb9\x41\xb5\xb9\x4c\xff\x33\xad\x52\xe7\x36\xaf\xec\x29\x45\x6b\xc9\x9c\x90\x3d\x22\x60\xe6\xd4\x86\xe4\x2e\x45\xf9\x67\x2a\xde\xd4\xf7\x50\xfb\x7d\x7d\x6f\x2e\x93\x7d\xb8\x62\x9f\xe3\x98\xc9\xfb\x73\xda\x5f\xc9\xf8\x43\x2b\x76\xde\x25\xb2\x20\xcc\xfc\x5f\xab\xd8\xa5\x47\xab\x99\x87\x61\xe2\xe0\x9d\x68\x3d\xc9\x96\x4b\x64\x8d\x2b\x43\x5d\x99\xbd\xcc\x5e\xb9\xce\xc0\x28\x3b\x53\xa2\x13\xaf\x19\xaf\xe7\xe2\xc5\x87\x77\xa2\x37\x85\x8e\xe0\x2d\x7a\x9a\x51\x32\xc0\xbf\x12\xc6\x63\xf8\x42\x4b\x67\x90\x04\x12\x7a\xf1\xfb\xcf\x44\x6f\x48\x0d\x26\xfe\x99\xf2\x8c\x1c\xe6\x7e\x89\xfa\x45\x0a\xcb\xf4\x62\xd5\xbf\xfb\xab\x3f\x01\x00\x00\xff\xff\x88\xc1\x98\xb6\x0e\x08\x00\x00")

func _lgraphqlProjectbynameGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlProjectbynameGraphql,
		"_lgraphql/projectByName.graphql",
	)
}

func _lgraphqlProjectbynameGraphql() (*asset, error) {
	bytes, err := _lgraphqlProjectbynameGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/projectByName.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdb, 0x17, 0xc, 0x27, 0x66, 0xb8, 0xd0, 0xc5, 0xca, 0xb, 0x9d, 0xa1, 0xc9, 0x71, 0x40, 0xce, 0x44, 0x37, 0x35, 0x67, 0x59, 0xe8, 0xbc, 0x97, 0xd7, 0xab, 0xd1, 0xe1, 0xb, 0x67, 0x7e, 0xd4}}
	return a, nil
}

var __lgraphqlProjectbynamemetadataGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x2c\x4d\x2d\xaa\x54\xd0\xe0\x52\x50\x50\xc9\x4b\xcc\x4d\xb5\x52\x08\x2e\x29\xca\xcc\x4b\x57\xd4\x54\xa8\xe6\x52\x50\x50\x50\x28\x28\xca\xcf\x4a\x4d\x2e\x71\xaa\xf4\x4b\xcc\x4d\xd5\x00\x0b\x29\x28\x40\x54\x82\x35\xc0\xd4\x81\x40\x66\x0a\x9c\x09\x92\x82\x73\x72\x53\x4b\x12\x53\x12\x4b\x12\xa1\x02\xb5\x5c\x20\x0c\x08\x00\x00\xff\xff\xd4\x75\x13\x1d\x79\x00\x00\x00")

func _lgraphqlProjectbynamemetadataGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlProjectbynamemetadataGraphql,
		"_lgraphql/projectByNameMetadata.graphql",
	)
}

func _lgraphqlProjectbynamemetadataGraphql() (*asset, error) {
	bytes, err := _lgraphqlProjectbynamemetadataGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/projectByNameMetadata.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x11, 0xcb, 0xca, 0xaf, 0x5d, 0xe3, 0x4, 0x41, 0x92, 0xee, 0xbf, 0x3f, 0xeb, 0x91, 0x7, 0xdb, 0xca, 0x4, 0x3e, 0x42, 0x4a, 0xbf, 0xf2, 0x1a, 0x2b, 0xb, 0x7, 0xa6, 0xff, 0x43, 0x58, 0x51}}
	return a, nil
}

var __lgraphqlProjectsbymetadataGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xcd\x4e\x2b\x31\x0c\x85\xf7\xf3\x14\xbe\xd5\x5d\xd0\x4d\x05\x1b\x16\x5d\x22\x2a\x84\x04\xa2\xa2\x85\xbd\x99\x71\xdb\xd0\xfc\x4c\x1d\x67\xa4\x51\x94\x77\x47\xd3\x29\x49\x11\x25\x2b\xeb\x3b\xce\xf1\x91\x1d\x23\xa8\x0d\x60\xab\xde\x89\x1f\x98\x50\x88\xd7\x3b\xb4\x2f\xbc\x38\x04\xd4\x30\x83\xc9\xcd\xec\x76\x76\x3d\x81\x94\xaa\x43\x20\xee\xe1\xaa\x02\x00\xf8\xbf\xa7\x7e\x0e\x2b\x61\x65\xb7\xff\x46\xd2\xa1\x0e\xf4\xcd\xa6\xf1\x08\x5b\x76\x9f\x54\x8b\xbf\xeb\x9f\x49\xb0\x41\xc1\xf1\xfb\xf0\xcc\x89\xcc\x21\x66\x36\xbc\xa3\xf3\xe0\xff\x83\x9e\xdc\xc7\x29\x59\x49\xc7\x6a\x5a\x0c\x54\x93\x4b\x8b\xa6\x34\x62\x10\xf7\xd8\xe8\x02\x3e\x18\x6d\xbd\x23\x9f\x41\x1b\xb4\x66\x3a\x04\xf2\xe2\x7f\x65\x2c\x5d\xec\x9a\x50\x8b\x72\x76\x61\x3b\xc5\xce\x1a\xb2\x52\xa6\xd4\xa2\x3a\x5a\xf5\x5e\xc8\xf8\x7b\x6a\xb5\xeb\x2f\x6b\x6b\xf4\xfb\xcb\xca\x2b\x19\xd7\xd1\x65\x6d\xc9\xce\x38\x29\xa2\x6b\xc9\xfa\x9d\xda\xc8\x72\x5c\xf3\x12\x45\x88\x6d\xd6\x1b\xea\x48\xbb\x76\x88\x78\x96\xd6\x3f\x29\xa3\x4a\xe6\xad\x92\x37\xd6\x7f\x2f\x2a\x0f\x39\xbf\xd2\xd9\x9a\xc7\x13\xa4\x2a\x55\x31\x02\xd9\x06\x52\xfa\x0a\x00\x00\xff\xff\x00\x3e\xbb\x56\x55\x02\x00\x00")

func _lgraphqlProjectsbymetadataGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlProjectsbymetadataGraphql,
		"_lgraphql/projectsByMetadata.graphql",
	)
}

func _lgraphqlProjectsbymetadataGraphql() (*asset, error) {
	bytes, err := _lgraphqlProjectsbymetadataGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/projectsByMetadata.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1a, 0xfb, 0x28, 0x97, 0xd9, 0xd9, 0xec, 0x81, 0xe3, 0x84, 0xed, 0xd5, 0x68, 0xe1, 0x47, 0xeb, 0xe5, 0x82, 0xf9, 0xa7, 0xf5, 0x60, 0x18, 0x2a, 0xc4, 0xc4, 0x6a, 0x63, 0x11, 0xdf, 0xbb, 0x37}}
	return a, nil
}

var __lgraphqlRemoveprojectmetadatabykeyGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8d\x31\x0b\xc2\x30\x10\x85\xf7\xfc\x8a\x6b\x71\xb0\x4b\xd1\xc5\x21\xa3\x20\x22\x22\x0a\x8a\xfb\x61\x4e\x8d\x9a\xb4\x1e\x57\xa1\x84\xfc\x77\x69\x2a\x55\x6f\xba\xf7\xc1\xfb\x5e\x08\x60\xcf\x80\xb5\x3d\x12\x2f\x99\x50\x88\x0f\x57\xf4\x5b\x5e\x3c\x1b\x7c\x40\x09\xf9\xb4\x9c\x95\x93\x1c\x62\x54\xae\x11\x14\x5b\x79\x18\x2b\x00\x80\x91\x35\x1a\x56\x5e\xb2\x3e\xdd\xa9\xd5\xb0\x17\xb6\xfe\x92\x15\x21\x31\x26\x57\xbd\x68\xc7\xd5\x8d\x4e\xb2\x21\x41\x83\x82\xf3\x76\x4d\x6d\x6f\xe8\xce\xfa\xba\x11\x1d\x86\x9c\x98\xd1\x9d\xfd\x8f\x25\x7d\x37\x32\xd0\x98\xbe\xe2\x5b\xfd\x69\x78\x74\x34\x04\xf7\x59\x56\x7d\x2b\xaa\x10\x80\xbc\x81\x18\xdf\x01\x00\x00\xff\xff\x82\x2b\x13\x86\xfe\x00\x00\x00")

func _lgraphqlRemoveprojectmetadatabykeyGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlRemoveprojectmetadatabykeyGraphql,
		"_lgraphql/removeProjectMetadataByKey.graphql",
	)
}

func _lgraphqlRemoveprojectmetadatabykeyGraphql() (*asset, error) {
	bytes, err := _lgraphqlRemoveprojectmetadatabykeyGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/removeProjectMetadataByKey.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x51, 0x5f, 0x3b, 0x9d, 0xd7, 0xe2, 0xc3, 0x44, 0x77, 0xc5, 0xee, 0xd3, 0xf3, 0x0, 0x12, 0x85, 0xf3, 0xc2, 0x63, 0x4e, 0xb3, 0xd3, 0xe3, 0x3, 0xfe, 0x4d, 0x53, 0x0, 0x39, 0xfc, 0x63, 0x76}}
	return a, nil
}

var __lgraphqlSwitchactivestandbyGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8c\xb1\x8f\x82\x50\x0c\x87\xf7\xfe\x15\xbf\x23\x37\x1c\x0b\xb9\x1b\x8f\xcd\xc1\x38\x3a\x60\xdc\x2b\x54\xa9\x91\x82\xcf\xa2\x31\x2f\xef\x7f\x37\x18\xb0\x43\x93\x7e\xe9\xf7\xc5\x08\x3d\x82\x07\xdd\x4b\xd8\x04\x61\x97\xb0\x6b\xd9\xb6\x61\x7d\x1d\xf9\x82\x02\xd9\x5f\xf1\x5f\xfc\x66\x48\x89\xba\xd1\xd9\xb5\x37\xfc\x10\xf0\x3d\x84\xfe\x2c\xb5\x97\xa8\x3c\xa8\x9d\xbe\x08\xc8\x11\x09\xb8\x3d\xd4\xeb\x76\x55\xbb\xde\xa5\x72\xb6\xe6\xf0\x9c\x04\x40\x6d\x18\xbd\x7c\xff\x4c\xb3\x04\x96\x1b\x30\xee\xa4\xfc\x94\x67\x9c\x68\xd9\xf9\xac\x6a\x43\x13\x48\x14\x23\xc4\x1a\xa4\xf4\x0a\x00\x00\xff\xff\xf9\xe3\xea\x42\xc6\x00\x00\x00")

func _lgraphqlSwitchactivestandbyGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlSwitchactivestandbyGraphql,
		"_lgraphql/switchActiveStandby.graphql",
	)
}

func _lgraphqlSwitchactivestandbyGraphql() (*asset, error) {
	bytes, err := _lgraphqlSwitchactivestandbyGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/switchActiveStandby.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb3, 0xeb, 0xd9, 0x14, 0xd, 0xb4, 0xf0, 0x79, 0xd5, 0x30, 0x22, 0x3, 0xa9, 0x7b, 0x73, 0xc8, 0xc6, 0xe0, 0x9e, 0xe2, 0xdb, 0x58, 0x38, 0x94, 0xe2, 0x22, 0xde, 0x93, 0x3a, 0x8c, 0xc7, 0x56}}
	return a, nil
}

var __lgraphqlTaskbyidGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\x31\x0f\x82\x30\x10\x85\xf7\xfe\x8a\x27\x61\xc0\x85\xe8\xa8\xa3\x89\x31\x4c\x2e\xc6\xfd\x42\x4f\x6d\xa4\x05\x8e\x62\x42\x9a\xfe\x77\x43\x11\xa7\xfb\xee\xdd\xcb\x97\x0b\x01\xe6\x01\xea\xcc\x9d\xe5\x22\x4c\x9e\xe5\xf6\x22\x77\x95\x73\x3f\x52\x83\x12\xd9\xbe\x3c\x94\xbb\x0c\x31\xaa\x7e\x64\x99\x50\x28\x20\x37\xfa\x88\xca\xf9\x8d\x02\xb6\x41\x01\x9e\x86\xf7\x69\xaa\x74\x31\x1f\x72\xa3\x53\x08\x18\x9d\x86\x23\xcb\x09\xea\xd6\x5a\x72\x4b\x38\x78\xf2\xe3\xb0\xa2\x78\xd6\x6b\xa5\x6b\xf8\xbf\xa5\x97\x16\x6e\xda\xe7\x52\x17\xb6\xad\xe7\xea\xa7\x61\xf9\x98\x7a\xd6\x47\x15\x55\x08\x60\xa7\x11\xe3\x37\x00\x00\xff\xff\xb1\xdc\x9e\x8c\xd8\x00\x00\x00")

func _lgraphqlTaskbyidGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlTaskbyidGraphql,
		"_lgraphql/taskByID.graphql",
	)
}

func _lgraphqlTaskbyidGraphql() (*asset, error) {
	bytes, err := _lgraphqlTaskbyidGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/taskByID.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7, 0x21, 0xe7, 0x4b, 0x30, 0x2a, 0x2e, 0x7, 0xac, 0x75, 0xd, 0xdc, 0x51, 0x75, 0x53, 0xa, 0x48, 0x5, 0xbe, 0x8e, 0x29, 0x2, 0x90, 0xe, 0xd3, 0xa6, 0xc7, 0xba, 0x1c, 0x46, 0xa4, 0x82}}
	return a, nil
}

var __lgraphqlUpdateadvancedtaskdefinitionGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x90\xc1\x4a\xc4\x30\x10\x86\xef\x7d\x8a\x11\x3c\xb8\x20\x7d\x80\xde\x16\xbd\xf4\x22\x1e\xf4\x01\x86\x64\xac\xa3\x64\x12\xd2\xa4\x20\x4b\xdf\x5d\xa6\x95\x95\xc4\xa0\x17\xd9\x9c\x9a\xaf\xf3\xf7\x9f\xaf\x2e\x27\x4c\xec\x05\x6e\x3a\x00\x80\x6b\xb6\x03\x8c\x92\xae\x6e\xf7\x6b\xc0\x64\x5e\x07\x78\x0e\x16\x13\x1d\xed\x82\x62\xc8\x3e\xe1\xfc\x7e\x4f\x2f\x2c\xac\xc9\x47\x1d\x19\x25\x64\x0d\x1d\x4e\x5b\x2e\xff\x32\xbf\x17\xe9\x61\x0d\x0d\x70\x3a\x83\x0d\xda\x41\xb7\x28\xd8\xd7\x16\xfb\x36\xe7\x37\xeb\xf6\x74\xf8\x8e\xf7\x7d\x0f\x5e\xa0\x5d\x7b\xe7\x9d\x43\xb1\x3f\xda\x8a\xab\xa0\xa3\x02\x58\x9a\x4d\xe4\xa0\x1f\x28\x78\xfa\x08\xe5\xe0\x4c\x71\x61\x53\x32\xb3\x57\x16\x6c\x8a\x3e\x87\x87\xba\x26\x44\xff\x46\x26\x15\x8c\x64\xe1\xe8\xc5\x91\xa4\x4a\xf9\x4f\xd7\xd1\xe1\x44\x97\x34\x65\x2d\xfc\x47\x4f\x3d\xd8\x54\x3b\xc6\x29\xeb\xe8\x5c\xe9\x35\x14\x9b\x9a\x4d\xa5\xb5\xfa\xc1\x6b\xb7\x76\x9f\x01\x00\x00\xff\xff\xe6\x9a\x86\xc0\x19\x03\x00\x00")

func _lgraphqlUpdateadvancedtaskdefinitionGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlUpdateadvancedtaskdefinitionGraphql,
		"_lgraphql/updateAdvancedTaskDefinition.graphql",
	)
}

func _lgraphqlUpdateadvancedtaskdefinitionGraphql() (*asset, error) {
	bytes, err := _lgraphqlUpdateadvancedtaskdefinitionGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/updateAdvancedTaskDefinition.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x23, 0x9a, 0x1c, 0x5d, 0xb2, 0x2f, 0x74, 0x94, 0x16, 0x75, 0x13, 0x8a, 0xf, 0x46, 0x88, 0x69, 0x5c, 0x26, 0x0, 0xf5, 0x17, 0xac, 0x36, 0x3d, 0x2c, 0xc4, 0x4c, 0xe6, 0xb1, 0x5b, 0xfa, 0x33}}
	return a, nil
}

var __lgraphqlUpdateprojectmetadataGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xb1\x6e\xc2\x30\x10\x86\x77\x3f\xc5\x35\xea\xd0\x2c\x51\xbb\x74\xf0\x5e\x55\x1d\x2a\x90\x40\xec\xa7\xf8\x20\x86\xc4\x31\xd6\x19\x09\x59\x7e\x77\xe4\x38\x10\x2c\x6e\xf2\x7d\xe7\xbb\xff\x0b\x01\xf4\x1e\xd0\xea\x1d\xb9\x5f\x47\xc8\xe4\xb6\x1d\x9a\x95\xfb\x39\x7b\xec\xa1\x81\xea\xab\xf9\x6e\x3e\x2b\x88\x51\x0c\x9e\x91\xf5\x68\xe0\x43\x00\x00\xbc\x6b\x25\xe1\xcf\xf0\x5b\xee\x4e\x74\x95\xb0\x61\xa7\xcd\x61\x26\x17\xec\x3d\xdd\x59\x1d\x26\xe8\xad\x42\xa6\xb5\x1b\x8f\xd4\xf2\x3f\x31\x2a\x64\xcc\xf7\x52\x69\x63\x3d\xcb\xf0\xe8\x27\xa6\x64\xca\x2a\x98\x45\x6e\x3b\x09\xe5\xc7\x54\x93\x45\x72\x79\x99\xcc\x36\xd9\xaa\x98\x46\x51\xbe\xea\xe5\xec\x53\xac\xc1\x61\x59\x1b\x66\x73\x91\xb7\xa2\x08\x01\xc8\x28\x88\xf1\x16\x00\x00\xff\xff\xa5\x4e\x06\xe0\x51\x01\x00\x00")

func _lgraphqlUpdateprojectmetadataGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlUpdateprojectmetadataGraphql,
		"_lgraphql/updateProjectMetadata.graphql",
	)
}

func _lgraphqlUpdateprojectmetadataGraphql() (*asset, error) {
	bytes, err := _lgraphqlUpdateprojectmetadataGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/updateProjectMetadata.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1e, 0x5c, 0x79, 0x65, 0xb3, 0x80, 0xef, 0xe5, 0x67, 0x82, 0x41, 0xba, 0x50, 0x62, 0x30, 0x52, 0xcb, 0x80, 0x62, 0xf1, 0xf6, 0xbb, 0xb7, 0x8c, 0xd9, 0xc5, 0xd7, 0xff, 0xca, 0x96, 0xcc, 0x66}}
	return a, nil
}

var __lgraphqlUpdateworkflowGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x4f\xbd\xce\x82\x30\x14\xdd\x79\x8a\xfb\x25\xdf\x20\x89\xe1\x01\xba\x19\x5d\xd8\x1c\x34\xce\x37\xf4\xa2\x15\x7b\xdb\x60\xc1\x81\xf0\xee\xa6\xad\x29\x42\x1c\x94\xe9\x9e\xc3\xf9\xab\xee\x1c\x3a\x65\x18\x56\x19\x00\xc0\xbf\x92\x02\x4a\x76\x7f\xeb\x08\x2d\xba\xea\x22\xe0\x68\x25\x3a\x3a\x99\xb6\xa9\x6f\xe6\xb1\xf7\x64\xc9\xb6\xf3\xb2\x7c\x08\xca\x6e\xa6\x88\x61\xfe\x53\x5e\x26\x60\x48\x44\x20\xa5\xf0\x4d\x33\xee\xd5\x14\x1b\xd3\x9f\x31\x5c\xf9\x64\x7f\x73\x31\x6a\x4a\x80\x7a\x62\x97\x90\x6d\xcd\x95\xaa\x09\xa3\xec\x91\x2b\x92\x07\xbc\x37\x3b\xaa\x15\xab\xf0\xe6\xf9\xaa\xa2\x28\xc0\x30\x6c\x3e\x6a\x4b\x8d\x67\x5a\x18\x16\x7b\xa6\xbd\x5f\x25\x6e\x8d\xd6\xc8\xf2\x97\xcc\x78\x8d\xd9\x98\x3d\x03\x00\x00\xff\xff\x0e\xba\xe8\x2e\xb7\x01\x00\x00")

func _lgraphqlUpdateworkflowGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlUpdateworkflowGraphql,
		"_lgraphql/updateWorkflow.graphql",
	)
}

func _lgraphqlUpdateworkflowGraphql() (*asset, error) {
	bytes, err := _lgraphqlUpdateworkflowGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/updateWorkflow.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc, 0x80, 0xe6, 0x3f, 0x89, 0xbb, 0xad, 0xfb, 0x49, 0xbc, 0xc1, 0xab, 0x61, 0x18, 0x77, 0xf7, 0x62, 0xd4, 0x23, 0x7, 0x7a, 0x9b, 0x30, 0x7f, 0x11, 0x2a, 0xbe, 0xe8, 0xad, 0x46, 0x7f, 0x83}}
	return a, nil
}

var __lgraphqlWorkflowsforenvironmentGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8e\xcd\xaa\xc2\x30\x10\x85\xf7\x79\x8a\xb9\x70\x17\xba\xc9\x03\xb8\x13\x7f\xa0\x7b\x5f\x60\x68\xa6\x12\x6b\x66\x34\x8d\x29\x22\x79\x77\x09\x62\x5a\x8b\x82\x9e\xd5\xf9\x60\xbe\xc3\x9c\x2f\xe4\xaf\xd0\x8b\x6f\x9b\xa3\xf4\xdd\x56\xfc\x86\xa3\xf5\xc2\x8e\x38\xcc\xfe\x69\x80\x05\x54\x1c\xfe\xe6\x70\x53\x00\xf0\xd1\x78\x11\xc6\xfa\x53\xcc\xb1\xa6\x54\x46\x47\x05\x28\x12\x87\x42\x27\x2f\x07\xaa\x07\x46\x13\x91\x6b\x32\x3b\xec\xda\x35\x35\x96\x6d\xb0\xc2\xa3\xd9\x1c\xad\x35\x08\xc3\xf2\xed\xed\x4a\x9c\x43\x36\x13\x65\xf2\x51\x4e\xfa\x7e\xb3\x72\xb8\xa7\x5f\x16\x1f\x2d\xa9\xa4\xee\x01\x00\x00\xff\xff\x54\xa3\x83\xe8\x7c\x01\x00\x00")

func _lgraphqlWorkflowsforenvironmentGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlWorkflowsforenvironmentGraphql,
		"_lgraphql/workflowsForEnvironment.graphql",
	)
}

func _lgraphqlWorkflowsforenvironmentGraphql() (*asset, error) {
	bytes, err := _lgraphqlWorkflowsforenvironmentGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/workflowsForEnvironment.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfa, 0x5c, 0xd1, 0x20, 0x6c, 0xf8, 0x5b, 0x74, 0xc9, 0xdb, 0x2b, 0x97, 0x37, 0xcb, 0x58, 0xab, 0x71, 0xfc, 0x91, 0x18, 0x38, 0x17, 0xa4, 0xc5, 0x8c, 0x6f, 0x98, 0x22, 0x8, 0x35, 0xa0, 0x25}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"_lgraphql/addAdvancedTaskDefinition.graphql":     _lgraphqlAddadvancedtaskdefinitionGraphql,
	"_lgraphql/addBillingGroup.graphql":               _lgraphqlAddbillinggroupGraphql,
	"_lgraphql/addEnvVariable.graphql":                _lgraphqlAddenvvariableGraphql,
	"_lgraphql/addGroup.graphql":                      _lgraphqlAddgroupGraphql,
	"_lgraphql/addGroupsToProject.graphql":            _lgraphqlAddgroupstoprojectGraphql,
	"_lgraphql/addNotificationEmail.graphql":          _lgraphqlAddnotificationemailGraphql,
	"_lgraphql/addNotificationMicrosoftTeams.graphql": _lgraphqlAddnotificationmicrosoftteamsGraphql,
	"_lgraphql/addNotificationRocketChat.graphql":     _lgraphqlAddnotificationrocketchatGraphql,
	"_lgraphql/addNotificationSlack.graphql":          _lgraphqlAddnotificationslackGraphql,
	"_lgraphql/addNotificationToProject.graphql":      _lgraphqlAddnotificationtoprojectGraphql,
	"_lgraphql/addOrUpdateEnvironment.graphql":        _lgraphqlAddorupdateenvironmentGraphql,
	"_lgraphql/addProject.graphql":                    _lgraphqlAddprojectGraphql,
	"_lgraphql/addProjectToBillingGroup.graphql":      _lgraphqlAddprojecttobillinggroupGraphql,
	"_lgraphql/addSshKey.graphql":                     _lgraphqlAddsshkeyGraphql,
	"_lgraphql/addUser.graphql":                       _lgraphqlAdduserGraphql,
	"_lgraphql/addUserToGroup.graphql":                _lgraphqlAddusertogroupGraphql,
	"_lgraphql/addWorkflow.graphql":                   _lgraphqlAddworkflowGraphql,
	"_lgraphql/advancedTasksForEnvironment.graphql":   _lgraphqlAdvancedtasksforenvironmentGraphql,
	"_lgraphql/deployEnvironmentBranch.graphql":       _lgraphqlDeployenvironmentbranchGraphql,
	"_lgraphql/deployEnvironmentLatest.graphql":       _lgraphqlDeployenvironmentlatestGraphql,
	"_lgraphql/deployEnvironmentPromote.graphql":      _lgraphqlDeployenvironmentpromoteGraphql,
	"_lgraphql/deployEnvironmentPullrequest.graphql":  _lgraphqlDeployenvironmentpullrequestGraphql,
	"_lgraphql/environmentByName.graphql":             _lgraphqlEnvironmentbynameGraphql,
	"_lgraphql/getTaskDefinitionByID.graphql":         _lgraphqlGettaskdefinitionbyidGraphql,
	"_lgraphql/lagoonSchema.graphql":                  _lgraphqlLagoonschemaGraphql,
	"_lgraphql/lagoonVersion.graphql":                 _lgraphqlLagoonversionGraphql,
	"_lgraphql/me.graphql":                            _lgraphqlMeGraphql,
	"_lgraphql/minimalProjectByName.graphql":          _lgraphqlMinimalprojectbynameGraphql,
	"_lgraphql/projectByName.graphql":                 _lgraphqlProjectbynameGraphql,
	"_lgraphql/projectByNameMetadata.graphql":         _lgraphqlProjectbynamemetadataGraphql,
	"_lgraphql/projectsByMetadata.graphql":            _lgraphqlProjectsbymetadataGraphql,
	"_lgraphql/removeProjectMetadataByKey.graphql":    _lgraphqlRemoveprojectmetadatabykeyGraphql,
	"_lgraphql/switchActiveStandby.graphql":           _lgraphqlSwitchactivestandbyGraphql,
	"_lgraphql/taskByID.graphql":                      _lgraphqlTaskbyidGraphql,
	"_lgraphql/updateAdvancedTaskDefinition.graphql":  _lgraphqlUpdateadvancedtaskdefinitionGraphql,
	"_lgraphql/updateProjectMetadata.graphql":         _lgraphqlUpdateprojectmetadataGraphql,
	"_lgraphql/updateWorkflow.graphql":                _lgraphqlUpdateworkflowGraphql,
	"_lgraphql/workflowsForEnvironment.graphql":       _lgraphqlWorkflowsforenvironmentGraphql,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"_lgraphql": {nil, map[string]*bintree{
		"addAdvancedTaskDefinition.graphql":     {_lgraphqlAddadvancedtaskdefinitionGraphql, map[string]*bintree{}},
		"addBillingGroup.graphql":               {_lgraphqlAddbillinggroupGraphql, map[string]*bintree{}},
		"addEnvVariable.graphql":                {_lgraphqlAddenvvariableGraphql, map[string]*bintree{}},
		"addGroup.graphql":                      {_lgraphqlAddgroupGraphql, map[string]*bintree{}},
		"addGroupsToProject.graphql":            {_lgraphqlAddgroupstoprojectGraphql, map[string]*bintree{}},
		"addNotificationEmail.graphql":          {_lgraphqlAddnotificationemailGraphql, map[string]*bintree{}},
		"addNotificationMicrosoftTeams.graphql": {_lgraphqlAddnotificationmicrosoftteamsGraphql, map[string]*bintree{}},
		"addNotificationRocketChat.graphql":     {_lgraphqlAddnotificationrocketchatGraphql, map[string]*bintree{}},
		"addNotificationSlack.graphql":          {_lgraphqlAddnotificationslackGraphql, map[string]*bintree{}},
		"addNotificationToProject.graphql":      {_lgraphqlAddnotificationtoprojectGraphql, map[string]*bintree{}},
		"addOrUpdateEnvironment.graphql":        {_lgraphqlAddorupdateenvironmentGraphql, map[string]*bintree{}},
		"addProject.graphql":                    {_lgraphqlAddprojectGraphql, map[string]*bintree{}},
		"addProjectToBillingGroup.graphql":      {_lgraphqlAddprojecttobillinggroupGraphql, map[string]*bintree{}},
		"addSshKey.graphql":                     {_lgraphqlAddsshkeyGraphql, map[string]*bintree{}},
		"addUser.graphql":                       {_lgraphqlAdduserGraphql, map[string]*bintree{}},
		"addUserToGroup.graphql":                {_lgraphqlAddusertogroupGraphql, map[string]*bintree{}},
		"addWorkflow.graphql":                   {_lgraphqlAddworkflowGraphql, map[string]*bintree{}},
		"advancedTasksForEnvironment.graphql":   {_lgraphqlAdvancedtasksforenvironmentGraphql, map[string]*bintree{}},
		"deployEnvironmentBranch.graphql":       {_lgraphqlDeployenvironmentbranchGraphql, map[string]*bintree{}},
		"deployEnvironmentLatest.graphql":       {_lgraphqlDeployenvironmentlatestGraphql, map[string]*bintree{}},
		"deployEnvironmentPromote.graphql":      {_lgraphqlDeployenvironmentpromoteGraphql, map[string]*bintree{}},
		"deployEnvironmentPullrequest.graphql":  {_lgraphqlDeployenvironmentpullrequestGraphql, map[string]*bintree{}},
		"environmentByName.graphql":             {_lgraphqlEnvironmentbynameGraphql, map[string]*bintree{}},
		"getTaskDefinitionByID.graphql":         {_lgraphqlGettaskdefinitionbyidGraphql, map[string]*bintree{}},
		"lagoonSchema.graphql":                  {_lgraphqlLagoonschemaGraphql, map[string]*bintree{}},
		"lagoonVersion.graphql":                 {_lgraphqlLagoonversionGraphql, map[string]*bintree{}},
		"me.graphql":                            {_lgraphqlMeGraphql, map[string]*bintree{}},
		"minimalProjectByName.graphql":          {_lgraphqlMinimalprojectbynameGraphql, map[string]*bintree{}},
		"projectByName.graphql":                 {_lgraphqlProjectbynameGraphql, map[string]*bintree{}},
		"projectByNameMetadata.graphql":         {_lgraphqlProjectbynamemetadataGraphql, map[string]*bintree{}},
		"projectsByMetadata.graphql":            {_lgraphqlProjectsbymetadataGraphql, map[string]*bintree{}},
		"removeProjectMetadataByKey.graphql":    {_lgraphqlRemoveprojectmetadatabykeyGraphql, map[string]*bintree{}},
		"switchActiveStandby.graphql":           {_lgraphqlSwitchactivestandbyGraphql, map[string]*bintree{}},
		"taskByID.graphql":                      {_lgraphqlTaskbyidGraphql, map[string]*bintree{}},
		"updateAdvancedTaskDefinition.graphql":  {_lgraphqlUpdateadvancedtaskdefinitionGraphql, map[string]*bintree{}},
		"updateProjectMetadata.graphql":         {_lgraphqlUpdateprojectmetadataGraphql, map[string]*bintree{}},
		"updateWorkflow.graphql":                {_lgraphqlUpdateworkflowGraphql, map[string]*bintree{}},
		"workflowsForEnvironment.graphql":       {_lgraphqlWorkflowsforenvironmentGraphql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
